"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.locationConversation = exports.startConversation = void 0;
const User_1 = __importDefault(require("../database/models/User"));
const keyboards_1 = require("../shared/keyboards");
const requests_1 = require("../shared/requests");
const dayjs_1 = __importDefault(require("dayjs"));
const utc_1 = __importDefault(require("dayjs/plugin/utc"));
dayjs_1.default.extend(utc_1.default);
const startConversation = (conversation, ctx) => __awaiter(void 0, void 0, void 0, function* () {
    const ctx_message = yield ctx.reply("<b>–ê—Å—Å–∞–ª—è–º—É –ê–ª–µ–π–∫—É–º –≤–∞ –†–∞—Ö–º–∞—Ç—É–ª–ª–∞—Ö–∏ –≤–∞ –ë–∞—Ä–∞–∫–∞—Ç—Éh!</b>\n\n–ú–∏—Ä, –º–∏–ª–æ—Å—Ç—å –∏ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ –ê–ª–ª–∞—Ö–∞ –¥–∞ –±—É–¥—É—Ç —Å –≤–∞–º–∏.\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —Å –∞–∑–∫–∞—Ä–∞–º–∏ üåø\n\n–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥—ë—Ç–µ —É—Ç—Ä–µ–Ω–Ω–∏–µ –∏ –≤–µ—á–µ—Ä–Ω–∏–µ –∞–∑–∫–∞—Ä—ã, –¥—É–∞ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º, –∞–∑–∫–∞—Ä—ã –ø–æ—Å–ª–µ –Ω–∞–º–∞–∑–∞, –∞ —Ç–∞–∫–∂–µ –ø–æ–ª–µ–∑–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π —Ç–∞—Å–±–∏—Ö.\n\n–ë–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.", { parse_mode: "HTML", reply_markup: keyboards_1.startKeyboard });
    const { callbackQuery } = yield conversation.waitFor("callback_query");
    if (callbackQuery.data === "next:location") {
        yield ctx.api.answerCallbackQuery(callbackQuery.id, {
            text: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞",
        });
        yield ctx.api.deleteMessage(ctx_message.chat.id, ctx_message.message_id);
        yield (0, exports.locationConversation)(conversation, ctx);
    }
});
exports.startConversation = startConversation;
const locationConversation = (conversation, ctx) => __awaiter(void 0, void 0, void 0, function* () {
    var _a;
    yield ctx.reply("<b>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞:</b>\n\nüèù –ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞–º —É—Ç—Ä–µ–Ω–Ω–∏–µ –∏ –≤–µ—á–µ—Ä–Ω–∏–µ –∞–∑–∫–∞—Ä—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ—Å—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–º–∞–∑–∞.", { parse_mode: "HTML", reply_markup: keyboards_1.locationKeyboard });
    const { message } = yield conversation.waitFor(":location");
    yield ctx.reply("üìç", { reply_markup: { remove_keyboard: true } });
    if (!(message === null || message === void 0 ? void 0 : message.location)) {
        yield ctx.reply("<b>‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é</b>\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start.", { parse_mode: "HTML" });
        return;
    }
    const { latitude, longitude } = message.location;
    try {
        const prayTime = yield (0, requests_1.getPrayTime)(latitude.toString(), longitude.toString());
        const dateStr = prayTime.date.readable;
        const timingsUTC = {
            Fajr: (0, dayjs_1.default)(`${dateStr} ${prayTime.timings.Fajr}`, "D MMM YYYY HH:mm")
                .utc()
                .format("HH:mm"),
            Maghrib: (0, dayjs_1.default)(`${dateStr} ${prayTime.timings.Maghrib}`, "D MMM YYYY HH:mm")
                .utc()
                .format("HH:mm"),
        };
        yield User_1.default.updateOne({ telegramId: (_a = ctx.from) === null || _a === void 0 ? void 0 : _a.id }, {
            $set: {
                location: {
                    latitude: latitude.toString(),
                    longitude: longitude.toString(),
                },
                date: prayTime.date,
                timings: timingsUTC,
                localTimings: prayTime.timings,
            },
        }, { upsert: true });
        yield ctx.reply(`<b>üåû –í–∞—à–µ –º–µ—Å—Ç–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞–º–∞–∑–∞ –Ω–∞ ${prayTime.date.readable}</b>\nüåÖ –§–∞–¥–∂—Ä ‚Äî ${prayTime.timings.Fajr}\nüåÉ –ú–∞–≥—Ä–∏–± ‚Äî ${prayTime.timings.Maghrib}\n\n‚úÖ –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.`, { parse_mode: "HTML", reply_markup: keyboards_1.toMenuKeyboard });
    }
    catch (err) {
        console.error(err);
        throw err;
    }
});
exports.locationConversation = locationConversation;
